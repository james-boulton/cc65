# Atari 7800 linker configuration file for cc65
#
# based on ld65 configuration file for rfk7800
# Copyright (C) 2004,2005 Thomas Mathys (killer@vantage.ch)
#

MEMORY {
        ZP: start = $40, size = $C0, type = rw, define = yes;
        
        SP: start = $140, size = $C0, type = rw, define = yes;
        
        RAM1: start = $1800, size = $840, type = rw, define = yes;
        RAM2: start = $2100, size = $40, type = rw, define = yes;
        RAM3: start = $2200, size = $600, type = rw, define = yes;

        # "Normal" cartridge rom. Multiple banks arent supported
        # by this script. You may change the rom size, but keep
        # two things in mind:
        # - start must be a multiple of $1000
        # - ROM must end at $ff79
        ROM: start = $8000, size = $7f7a, file = %O, type = ro,
             fill = yes, fillval = $ff, define = yes;

        # Encryption stuff
        ROME: start = $ff7a, size = $80, file = %O, type = ro,
              fill = yes, fillval = $ff;

        # Interrupt vectors
        ROMV: start = $fffa, size = $6, file = %O, type = ro,
              fill = yes, fillval = $ff;
}

SEGMENTS {
        CODE: load = ROM, type = ro;
        RODATA: load = ROM, type = ro, align = 256;
        DATA: load = ROM, run = RAM1, type = rw, define = yes;
        STARTUP: load = ROM, type = ro;

        ENCRYPTION: load = ROME, type = ro;
        VECTORS: load = ROMV, type = ro;

        BSS: load = RAM1, type = bss, define = yes;
        ZEROPAGE: load = ZP, type = zp;
}

FEATURES {
        CONDES: segment = RODATA,
                type = constructor,
                label = __CONSTRUCTOR_TABLE__,
                count = __CONSTRUCTOR_COUNT__;
        CONDES: segment = RODATA,
                type = destructor,
                label = __DESTRUCTOR_TABLE__,
                count = __DESTRUCTOR_COUNT__;
}
